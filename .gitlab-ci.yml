stages:
  - lint
  - build
  - deploy

.base_ruff:
  stage: lint
  tags:
    - python
  interruptible: true
  image:
    name: ghcr.io/astral-sh/ruff:0.11.12-alpine
  before_script:
    - cd $CI_PROJECT_DIR
    - ruff --version

Ruff Check:
  extends: .base_ruff
  script:
    - ruff check --config "lint.select=['E', 'F', 'S']" --ignore E501 --output-format=gitlab > code-quality-report.json
  artifacts:
    reports:
      codequality: $CI_PROJECT_DIR/code-quality-report.json

Ruff Format:
  extends: .base_ruff
  script:
    - ruff format --diff

build_bot_image:
  stage: build
  tags:
    - docker
  image: docker:latest
  before_script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - docker build -f docker/production/dockerfile -t kirillbad/anekdotarena:latest .
    - docker push kirillbad/anekdotarena:latest
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^feature\// || $CI_COMMIT_BRANCH == "develop"'

deploy_to_stage:
  stage: deploy
  tags:
    - docker
  image: tailscale/tailscale:stable
  before_script:
    - apk add --no-cache openssh-client
    - tailscaled --state="mem:" &
    - tailscale up --auth-key=${TAILSCALE_AUTHKEY} --hostname="gitlab-$(cat /etc/hostname)" --accept-routes
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H stage >> ~/.ssh/known_hosts
  script:
    - scp "docker/production/docker-compose.yml" "kirillbad@stage:~/"
    - scp "docker/production/prometheus/prometheus.yml" "kirillbad@stage:~/prometheus/"
    - ssh kirillbad@stage 'bash -c "docker compose up -d"'
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
